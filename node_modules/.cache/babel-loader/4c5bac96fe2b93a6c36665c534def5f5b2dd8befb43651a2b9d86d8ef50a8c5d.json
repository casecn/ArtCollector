{"ast":null,"code":"var _jsxFileName = \"/Users/cncase/projects/course_work/project_05/UNIV_Art_Collector_React_Starter/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// These imports won't work until you fix ./components/index.js\n/*import {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title\n} from './components';*/\n\nconst App = () => {\n  _s();\n  /**\n   * We are at the App level component, which is top-most. Any state which needs to be shared between immediate children should\n   * be made here, so create state pairs using useState() for:\n   * \n   * searchResults, setSearchResults (default should be this object:  {info: {}, records: []} )\n   * featuredResult, setFeaturedResult (default should be null)\n   * isLoading, setIsLoading (default should be false)\n   */\n  const [searchResults, setSearchResults] = useState({\n    info: {},\n    records: []\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  });\n};\n\n/**\n * Boostrap the <App /> component into the '#app' element in the DOM,\n * using ReactDOM.render();\n */\n_s(App, \"Gw7QWCuZp1YrGgkfhIdP8/BC5ss=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","App","searchResults","setSearchResults","info","records"],"sources":["/Users/cncase/projects/course_work/project_05/UNIV_Art_Collector_React_Starter/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// These imports won't work until you fix ./components/index.js\n/*import {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title\n} from './components';*/\n\nconst App = () => {\n  /**\n   * We are at the App level component, which is top-most. Any state which needs to be shared between immediate children should\n   * be made here, so create state pairs using useState() for:\n   * \n   * searchResults, setSearchResults (default should be this object:  {info: {}, records: []} )\n   * featuredResult, setFeaturedResult (default should be null)\n   * isLoading, setIsLoading (default should be false)\n   */\nconst [searchResults, setSearchResults] = useState({info: {}, records: []});\n\n  return <div className=\"app\">\n    {/* <Title /> is static, doesn't need any props */}\n\n    {/* <Title /> */}\n\n\n    {/* <Search /> needs props for setIsLoading and setSearchResults (trigger <Loading /> on search start/end, and transfer results to preview) */}\n\n\n    {/* <Search /> */}\n\n\n    {/* <Preview /> needs props for searchResults, setIsLoading and setSearchResults (clicking prev/next buttons), and setFeaturedResult (clicking a preview) */}\n\n\n    {/* <Preview /> */}\n\n\n    {/* <Feature /> needs props for featuredResult, as well as setIsLoading and setSearchResults (clicking on searchable properties) */}\n    \n    {/* <Feature /> */}\n\n\n    {/* <Loading /> is static, but should only render when isLoading is true */}\n    \n    {/* <Loading />  */}\n    \n    {/* use a ternary and render null if isLoading is false */}\n  </div>\n}\n\n/**\n * Boostrap the <App /> component into the '#app' element in the DOM,\n * using ReactDOM.render();\n */"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC;IAACK,IAAI,EAAE,CAAC,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAEzE,oBAAO;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA4BrB;AACR,CAAC;;AAED;AACA;AACA;AACA;AAHA,GA1CMJ,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}